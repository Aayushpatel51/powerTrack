$menu-items: 7;
// The actual number of items in the menu
$menu-items-loop-offset: $menu-items - 1;
// We multiply it by 1% to get the correct % unit
$width: (100/$menu-items) * 1%;

$transition-speed: 1.3s;
$background-color: #121212;
$indicator-color: #e82d00;


.nav-indi{
  list-style: none;
  padding: 0;
  width: 100%;
  max-width: 1055px; 
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
  border-radius: 50px;
  height:50px;
  margin: 50px auto;
  overflow-y: hidden;
  overflow-x: scroll;
  &::-webkit-scrollbar{
    display: none;
  }
}

.primary-nav {
  list-style: none;
  margin: 0;
  max-width: 1055px; // As all measurements are using % this could be a flexible value.
  padding: 0;
  width: 100%;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
  border-radius: 50px;
  height:50px;
  @media (max-width: 600px){
    width: 200%;
  }
}

.Nav-item{
  background: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  float: left;
  margin: 0;
  padding: 0;
  width: $width; //dynamic width
  text-align: center;
  z-index: 11;

  @media (max-width:950px){
    height: 100%;
  }

  &:first-child {
    border-radius: 50px 0 0 50px;
  }

  &:last-child {
    border-radius: 0 50px 50px 0;
  }
  &.active button {
    color: white;
  }

  button {
    color: #19227d;
    display: block;
    padding-top: 20px;
    padding-bottom: 20px;
    text-decoration: none;
    background:none;
    border: none;
    z-index: 11;
    font-weight: 700;
    font-size: 14px;
    cursor: pointer;

    @media (max-width:950px){
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      padding: 0;
      font-size: 12px;
    }

  }
}
  

.indicator {
  position: relative;// the menu is "relative" to the absolute position last-child pseudo elements.
  z-index: 0;

  .Nav-item {
    // ======================================================
    // Step 2.1 - Making the indicator with the pseudo element.
    // ======================================================
    &:last-child {
     &:after {
        content: '';
        display: block;
        position: absolute;
        pointer-events: none;
        transition: left #{$transition-speed} ease;
      }
      // Making the top CSS Triangle - learn more: https://css-tricks.com/animation-css-triangles-work/
      &:after {
        background: $indicator-color;
        top: 0px;
        bottom: 0px;
        left: 0;
        width: $width;
        height: 100%;
        z-index: 0;
        border-radius: 50px;
      }
    }

  }

  @for $i from 1 through $menu-items-loop-offset {
    // when the Nav item "is active", make the indicator line up with the navigation item.
    .Nav-item:nth-child(#{$i}).active ~ .Nav-item:last-child:after {
      left:($width*$i)-$width;
    }
}

// ======================================================
// Step 3 - Making it move
// ======================================================

    // This could be in the same loop as the above but for the tutorial steps it's not
    @for $i from 1 through $menu-items-loop-offset {
    // We have to use !important to make the hovers overide if the last:child is the active or hovered
    .Nav-item:nth-child(#{$i}):hover ~ .Nav-item:last-child:after {
      left:($width*$i)-$width !important;
    }
      
  }
    
    // this could be nested in the original .Nav-item
    .Nav-item {
        &:last-child {
          // make sure the last-child talks to itself
          &:hover, &.active {
            &:after{
              left: 100%-$width !important;
            }
          }        
        }
    }

}